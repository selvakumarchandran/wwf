<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!-- version -->
	<context-param>
		<param-name>version</param-name>
		<param-value>1.0 Chen.H</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext*.xml</param-value>
	</context-param>
	
	<!-- ******************************************************************* -->
	<!-- * Servlets definition * -->
	<!-- ******************************************************************* -->

	<servlet>

		<servlet-name>dwr</servlet-name>
		<servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
		<init-param>
		     <param-name>debug</param-name>
		     <param-value>true</param-value>
		</init-param>
		<init-param>
		    <param-name>crossDomainSessionSecurity</param-name>
		    <param-value>false</param-value>
		</init-param>

		
		<load-on-startup>2</load-on-startup>
	</servlet>

	<!-- ******************************************************************* -->
	<!-- * Servlets mapping * -->
	<!-- ******************************************************************* -->

	<servlet-mapping>
		<servlet-name>dwr</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	
	<!-- 配置session的filter过滤 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
		<!--<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param> -->
		

	</filter>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!-- 用户过滤器 -->

	<filter>
		<filter-name>userFilter</filter-name>
		<filter-class>com.mpaike.view.filter.UserFilter</filter-class>
		<init-param>
			<param-name>login_url</param-name>
			<param-value>/login.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>notCheckJsp</param-name>
			<param-value>
				/login.jsp,/login_do.jsp,/login_out.jsp,/error.jsp
			</param-value>
		</init-param>

	</filter>

	<filter-mapping>
		<filter-name>userFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>userFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!-- Spring监听器 配置开始 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<servlet>
		<servlet-name>RandomCodeImage</servlet-name>
		<servlet-class>
			com.mpaike.servlet.RandomCodeImage
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>RandomCodeImage</servlet-name>
		<url-pattern>/servlet/randomCodeImage</url-pattern>
	</servlet-mapping>

	<!-- Spring监听器 配置结束 -->
	<!-- 系统初始化Servlet  -->
	<servlet>
		<servlet-name>InitServlet</servlet-name>
		<servlet-class>com.mpaike.servlet.InitServlet</servlet-class>
		<load-on-startup>3</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>UploadServlet</servlet-name>
		<servlet-class>com.mpaike.upload.action.UploadServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>UploadServlet</servlet-name>
		<url-pattern>/uploadServlet</url-pattern>
	</servlet-mapping>
	<!--xfire-->
	<servlet>
		<servlet-name>XFireServlet</servlet-name>

		<servlet-class>
			org.codehaus.xfire.spring.XFireSpringServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>XFireServlet</servlet-name>
		<url-pattern>/servlet/XFireServlet/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>XFireServlet</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>MydailyServlet</servlet-name>
		<servlet-class>
			com.mpaike.client.servlet.MydailyServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>MydailyServlet</servlet-name>
		<url-pattern>/mydaily</url-pattern>
	</servlet-mapping>
	<!--xfire-->

	<!-- 用户过滤器 -->

	<filter>
		<!-- 定义核心Filter的名字 -->
		<filter-name>struts2</filter-name>
		<!-- 定义核心Filter的实现类 -->
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>

	</filter>
	<!-- FilterDispatcher用来初始化Struts 2并且处理所有的Web请求 -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>

	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/error/404.jsp</location>
	</error-page>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	


</web-app>
